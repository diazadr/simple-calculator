<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAAaGQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAGOFJ
        REFUeNrt3XtwXNV9B/Dv2bt796GVtJJWsiQ/ZGFiAbJNHjaBAIZ0OikZ0tiknUDHSQnTmZIJbRoKdqEd
        4ookpQEHaMwjzCR1CBgHEp7FQJyADcYYg4ltjAFhY8kPWQ9L1mOlXWlfp3/YYmRjybvSvXv27vl+/gJJ
        e/d3ru/57rnnnr0XICIiIiIiIiIiIiIiIiIiIiIiIiLnEqoLUOnBdevqkknMVl0HqSNd6Y7vL1vWrLoO
        VbQIgHvWrCn1eDxLBVx/BYFqAF9WXRPlHwlshUSHQPoPMmE+80/XfbNTdU12K+gAWL127dUu4FpAfFV1
        LeQ8EtgqZPrhG771rYdU12KXggyA1Y+su8zlkvcA+JzqWsj5pJQtQuDGG5Yte1Z1LVYrqAC4b80T04SZ
        WMNPfLKDBLamIa8rpDmDggmA+x599HwhxIuAqFFdCxW0XkBeVyijAZfqAqyweu3aqyFcW9n5KQfKAPHM
        /WvXrlRdiBUcPwI4PtEnfqu6DtKRvOeGZcv+VXUVU+HoAHjgkUe+mHYZGwXgV10L6SkNec0/L1v2uOo6
        JsuxAfDgunV16XSaw35SSgIxVzr15e99+9vbVNcyGY6dA0il5Tp2flJNAH7pcj29Zs0ar+paJsORAXD/
        2rVLBHCR6jqIjhM1g27vd1VXMRmODABAFMQMLBUO4cId9615YprqOrLluABYvXbt1eAKP8ozAvALM/Fv
        quvIluMCwAVxveoaiE5PfEd1BdlyVACcGGLxm3yUr8pWP7LuMtVFZMNRAQBP/ArVJRBNxOVKL1FdQ1b1
        qi4gG0KIq1XXQDQRKbFUdQ3ZcFQASIlzVNdANBEhRP09a9aUqq4jU44KACFEveoaiM7EMM1q1TVkyjEB
        4MRrrKQnkXYxACzniTtmp5LehEjNVl1DptyqC8iUlEZICJmz9xscjGL/vgPY39qGaGwEiXgS0eER1buB
        MmCaHvh9JkzTg/rZNZgzpw6hUInqsvKSYwIgl955Zzfe3v4hJHIXOGSdeDyBeDwBADja3Ye3tn+Ahs/M
        wuLFC+F285Afi3tjjJ7uY3jhpS0YHIqpLoUs1rz3IFoOtOOKr1yE6dN5NjnKOXMANuvpPoYnnnyZnb+A
        xeMJPPf8azjQelh1KXmDAXDCCy9tATjk18IfX34LyWRSdRl5gQEA4I0t7/CTXyOJZBIvvbRZdRl5QfsA
        GByMYtd7+1WXQTl2qO0o2to6VJehnPYB0Nz8MTj019P7ez62ZbupVCqsum2Z0j4A9n3MCSFdHWzrsmW7
        6VSK3wWwWiJhz0rAwaFh1U0jReJxeyYC0+m0YwLAMesAUqlkOeCxfgcYbiQNngKQdaSUAdU1ZMoxAYC0
        NG3ZrMsD02d9sBA5gWNOAYjIegwAIo0xAIg0xgAg0hgDgEhjDAAijTEAiDTGACDSGAOASGMMACKNMQCI
        NMYAINIYA4BIYwwAIo0xAIg0xgAg0hgDgEhjDAAijTEAiDTGACDSmPYBECr2qy6BSBntA6AkyADQVdBv
        y42mHUX7AKisdMwzHMhitdVlqktQTvsAmDWzRnUJpEhdHf/ttQ+AUFkJzprlmGc5kkVCxX5UV1eqLkM5
        7QMAABYtbITHw12hk8suOR9ut6G6DOV41AMIBPy4+ILzVJdBOfKFBfUorwipLiMvMABOqK+fgXkNM1WX
        QTY7a1YY5513tuoy8oZzHg6aA4sWNWLG9Eq8vHknEom06nLIYhdfcA7mzp2tuoy8whHAKWpqq/CNv76U
        E4MFpLaqFH/z9UvY+U+DI4DTCAT8uGzxQiyKxtDZ2YPOzmNIpVKqy6IsTZtWgXBFCKGyEtWl5C0GwAQC
        AT/q62egvn6G6lKIbMFTACKNMQCINMYAINIYA4BIYwwAIo0xAIg0xgAg0hgDgEhjDAAijTEAiDTGACDS
        GAOASGMMACKNMQCINMYAINIYA4BIYwwAIo0xAIg0xgAg0hgDgEhjvCnoBOqnT8eM6mr4fD543G4UB4PK
        akkkk4gMDgIAjnR14nB7O/oHh1TvIgBAwO9HXW0taqdVwSVcCAb8ME2vsnqGokMYiSeQTCZxpLMTB44c
        wXA8rno35SUGwGnMrKnBwnmNSg/iU3ncbpSHQgCA8lAI8+Y24EhHB97evVvpwX3+OQ2YW18Plyt/nrNX
        FChCUeD4f1eFw2hsaMCe5mY0t7aqLi3vMADG8JkmFs2fj9rqatWlZKS2uhpfLS/D9vf24FB7e07fu6y0
        FBcsmI9QSanq3XBGHrcbn21sxIzaGmzdsRPRWEx1SXmDcwAn+EwTX7n0Usd0/lGm6cWXPv95nH9OQ87e
        c2ZNDf7ySxc5ovOPFS4rxxWLF6Os1Fl124kBcMKi+fPh9/lUlzFpc+vrES4rs/19fKaJhfMa82rInw2P
        240LFsxXXUbeYADg+Cea0z75T+VyGbhgwQIYbnvP6j7XmF9zI5MRKinN6Ygpn2kfAIbbjYXzGlWXYYni
        YBDzzp5j2/anV1VhVm2t6mZaYm59PUqDRarLUE77AJhdW+v4T7Sx6qbb9xzDObPrVDfPMi6XgbNmFU57
        Jr0fVBeg2vTqaapLsJTf57NlLsBwuzGtokJ18yxVU1mpugTltA+AoD+gugTLFQesb1PQ53XsxN94fA6e
        9LWK9usAvKbH8m329vUhOhTN6G+nT7f+nNr0WN+mYKDwzpc9Nk+YOoH2e8CO8/9XX92Ce3/1REZ/u+m5
        h1XvAtKY9qcARDpjABBpjAFApDEGAJHGGABEGmMAEGmMAVCQpOoCyCEYAAUonUpbvk0pGSqFiAFQgNLS
        jgCwfpuknvYrATMViUSwc9d7Gf1t8979GW938+tbM/q78rIQGhvPVdZ+mc58BHD5169VVifA1ZXZYABk
        aGAggtvu/IXl2810m9d87XKlAUCFiacARBpjABBpjAFApDEGAJHGGABEGmMAEGmMAUCkMQYAkcYYAEQa
        40rADE2fXpvxEtNnnl2v9U1BC7FNhYojACKNMQCINMYAINIYA4BIYwwAIo0xAIg0xgAg0hgDgEhjDAAi
        jWm/EjCdTsHlMizdZnV1Fa752uWqm0Z0RtoHwPDwCAKBgKXbvPCLi3DhFxepbpqlRhJx1SWQDbQ/BYiN
        DKsuwXLRYevbFI8nVDfLcsMF+G+fLe0DoOvoUdUlWO7osV7Lt9kXiSAajapumrVtGhhQXYJy2gfAxy2t
        qkuw1NHubgwODdmy7QOHD6lunqVaWlpUl6Cc9gHQcugQOo52qS7DMtt37rRt22/v3FUww+bIYAQ7P/xQ
        dRnKaR8AALBh4ybEE84/x/24tQX7Wltt237/wADe+vOfVTfTEq9ueQPJApzXyBYDAMcP7Hd2OPvAjkaj
        2PDaa7a/z6497zt+xPTBR81oOVRYpzOTxQA4Yfu7u3Hg4EHVZUzK8Mgw/rDxlZx9om3YuAk9vcdUN3tS
        jrS3Y9Obb6ouI28wAMZ4bsMGbNi0yVHnuQcOHsRjv38Sh9s7cvae/QMDeOzJp7Bz926k0ynVuyAj8UQC
        W9/ahifXr+fQfwztFwKdqnnfPhxua8NlF38JM6fPgOnxqC7ptPr7+7Ftxw4079unrIbN27Zhb0sLLr3o
        QlRXVqneJeM61HYYG7e8gX5e9vsU7QNACAEp5Uk/G4rF8MKfXgYAnD17NsrLyhDw+1WXCgBo7+pCT08P
        unutv9Y/GR1dXfjds8+hyO9HzbRpmFFbq7okAEAqlUJ7Zydaj7TxE38C2geAy2UglUqO+/t9ra2AjTPr
        dhDC+m26XBOfLQ7FYtjX2mrrVQjL2bGjHEb7OQDDY+0XgfKBy7A+112GUXAdxrD4S2BOpH0A+Hz5MbS3
        ijAMeGyYtxBCwOv1qm6epbx+n+oSlNM+ALw+H4RROJ8EfhvnKvwWf2tSKSHg8zEAtA8AIQRKSopVl2EJ
        w3CjKBi0bfum1wtfUWGEQFEwCHeeXuHJJe0DAAC8Pj98fucf2CVlIQibz9ODwWLHj5jcHg8CRUWqy8gL
        DIATgiXOPrADwaAt5/6ncrlcKC0tUd3cyRMCJaWltgelUzAATnC5XKgIh2H6nDXRJYRASSiEYHHuTmNM
        rw9l4bDjAtPt8aAiHObQfwwGwBgulwuhsnKUlJY64pKX2+NBRVUVfAoWKXk8HoQrKx0zJxAIBlFWUQHD
        rf3Sl5Nwb5yGLxCAx+vFcCyG4WhswoVCOScEfD4/vD4TXsWXMI9PoJbC7w+c2FfRT62qVMllGPD5ffD7
        A+z44+BeGYdhGCgKBm2dVS8UHo8HHo8HxSUOnhvQFE8BiDTGACDSGAOASGMMACKNMQCINMYAINIYA4BI
        YwwAIo0xAIg0xpWAGZpepf6ut4PRIfQP2vPcP6v4TBMVoZDqMtBx7BhSyTxawp2nGADjqA6H8Zm6OlSG
        w/Dk2TryyOAgDhxpw4ctrXlxkDfMno3aadNQFQ6rLuUk6XQKnT09ONR2BC1tbarLyUv5dWTnAZ9pYl7D
        XMyZVae6lHEVB4OYN7cB9TNmYMee99HWpeZRXWWlpbhgwXyESkpV75LTcrkM1FRWoaayCmfVzcLWHTsR
        jcVUl5VXGABjzKypwcJ5jTBNZ9wToChQhEsWLcKRjg68vXs3huPxnL33+ec0YG59PVwOubNuuKwcVyxe
        jD3NzWh20q3LbcZJwBPCZWW48LPnO6bzj1VbXY2LF34hZ+/3ufPOwzlzznZM5x/lcbvx2cZGzJk1S3Up
        eYMBAMBwu3HBggWOO6DHCpeVo2H27By8TxnOrnN2B1rQMDdvnvSkGgMAwIK5c1FcAN/7b2xosP3A/sK8
        RkcHJQCYphcL589TXUZe0D4ASoNFjv9EG+Vxu209sM+dMydvJ/yyVVNZhZk1NarLUE77AJg9Y4bjP9HG
        CpeV23b7qxnV1aqbx/ZYTPsACJeXqy7BUh63G5U2LMQJ+P0oz4MFPlaqCBXGaGYqtA+AogJ4IMipSm2Y
        z/CapupmWa4owIeDaL8OwG3RcDmVSmEgEkHZJD8lu7t7EA5XqN4d4wpk8WDQxLeuVFqr59H1St/fSbQf
        AVi1zHfd40/hplt+jN6+vqxfu/7FDfjuD25DR2en6t1BmtE+AKyw/sUN+OVvn8f+I0fx01X3IxrNfLnp
        m9vexl0PrkX3wBD+feVdiEQiqptDGmEATNFoB/7k/9/9CKsf+CXiGSzL3bPnA9zyk/s++f/9R47iJz/9
        eVYBQjQVDIApaG7ee1IHHvXia9vx6GO/QyqVGve1Bw4cxMo7Vn/q56MBMtFriazCAJiktrYj+I8f3TPu
        73/z1Ab83/MvnfZ33d09aLrj5+geOP13+198bTsefuS3qptIGmAATEJ3dw9u+9Hd43bgUff+6gls3LT5
        pJ9FIhHcfse92H/k6ISv/c1TG7D+xQ2qm0oFjgGQpUgkglX3/uKMHXhU092/xK5duwEA8Xgcd//PQ3h3
        78GMXnvXg2ux+fWtqptMBYwBkIV4PI4HHvo13nz3o6xe9y+3rUJz81488NAabHxrd1avve3OX2DPng+y
        eo1Mpy1vu0T+PPWXrKP9QqBcuX75jyf1unBJEYLB7FaspaUNAZBmABQijgCyYJombvz+9fjq4oU5eb9w
        SRF+9pNbUJfltxWltL6z2rFNUo8jgCyNhgBwfLbeLpPt/LbJIgC4FNc5OAKYBLtHAnnX+algMQAmya4Q
        YOenXGIATIHVIcDOT7nGAJgiq0KAnZ9UYABYwDRNfO/670xpG/947d+y81POMQAsMLpAaCr+a/XDWS/4
        IZoqBsAUxeNx3PPzhyy5JHjDrf/NEKCcYgBMgZWdfxRDgHKJATBJdnT+UQwByhUGwCTY2flHMQQoF7gU
        OEu56Pyjbrj1v3H/HbegsfFc1c3OCu8K7BwcAWQhl51/FEcCZCcGQBYMw0BlOPsnCZ1VW4nf/+/d+ME/
        fDPr107m68BEmWIAZMEwDFz77Wvw99/4SsavOau2Enf++FaEwxVYuuTKrEKAqwPJbgyALGUTAmM7/6hM
        Q4Cdn3KBATAJmYTA6Tr/qDOFADs/5QoDYJImCoGJOv+o8UKAnZ9yiQEwBacLgUw6/6hTQ4Cdn3KN6wCm
        aDQEAOD1N3dk3PlHLV1y/Jr5o79bz85POccAsMBoCFy19MpJPR586ZIrccnFF+b148GpMGkfAPFEAqbH
        M+XtGIYxqc4/qpA6P1fiOYf2cwDJREJ1CY4QHRlWXQLZQPsAGBgaVF2C5foGIpZvc3jkzI87d5rIoPX7
        yWm0D4COjk7VJVgqnkigs6fH8u0ORaM42t2tunmW6iqw9kyG9gHwwUcfIZ1OqS7DMp1dnUgmk7Zse/+B
        A6qbZ6mPWwurPZOhfQB09/Ziz4fNqsuwRDyRwMYtb9i2/bd27EBP7zHVzbTEobbDaN63T3UZymkfAADw
        +va30d/fr7qMKXtz+9voHxiw9T1e2fy640dMwyPD+OOmV1WXkRcYAACS8QReeX2zow/sQ22HsWvP+7a/
        T0dXF97NwfvY6bWtb2IoFlNdRl5gAJxwuL0DL/zxT46cGf7go2Y8//LLOXu/zdu2Yefu3Y4LzOGRYWzY
        tIlD/zG0Xwg0VsuhQzj01FO4/MILce7cBtXlnFFkMIJXt7yBlkOHcv7em7dtw96WFvzFpZegoiz7m6Tk
        2pH2drz0yiv85D8FA+AUyXgCf3ptMz7cuxcLGhsxvaYGPq9PdVknOdrdjf0HDuDPe95DMq5uIVNHVxce
        e/IpLFwwH3UzZ6F6WhVcLkP17vlEPJFAe3s79h9oxXvNH6kuJy85JgCETNqyEkUYBmTq00PZw+0dONze
        obrZ+UOIcX+1/d3d2P7ubtUV0iQ4Zg4gmU7bcv3JcDlmF2TM5RJT38intll4+0kI6/cTAKRT0jGXlBzz
        rxobGrLl49htTv2LQPnGcFvfJpfLBWHkz/DeCm7TtGW7qXSSAWAHO2ad/T6/6mZZyu3xwLChowoh4PPl
        11zIVPltak8qnmIA2CGVSlu+TY9pwm3B14HzRZGNtxAPFBVNOBfgJMIw4PVbH/5pKZFIjjAA7JAYGbFl
        u6WhUEEc2D5/AF4bRzSGYaC4uER1My1RWlpqyxxAYtieY9QujgqAmE3XcA23G8HioOrmTYkwDARLim1/
        H39RwPEjJl9RAKbXa8u2R+LOum+CowIglUwiZdM33QJFQXgdeo4rhEBpaWnOZupLQyHHTgi6PR7bRjFp
        KTESYwDYasSm0wAAKC0rQ4nDTgc8Xi8qqqps+0Q7HcPtRriyEr6igOrmZyUQDKI8HLbt8l9iJA4ppepm
        ZsUxC4FGDUUi8Pl9tq048/n98Hg86O/ry+/bhQmBYHEQgSI1py5CCJSUlMLn9aG/tzevD3zDcKOkLASP
        zacuQw78HonjAkBKiaHBKIptPN813G6Uh8NIJZMYGRlGPB5HvhzfbrcbpumB6fXZ9kmWDdPrRWV1NeIj
        w4jHE0jkUWiapgnTNOGx6Xr/WCPDI/n9gTEO5wSAlH04cbwPR4dQFAzYvu7ccLsRcAcR4MN5z8j0+mDm
        2XcmciUtJQYj9t6HwS5OmgP4ZCWglBIDfc7c4VR4hiKDJ09OS9mquqZMOSYAmlasOOnunfGRYURsuPst
        UTaGYzHETr2ztBCO+RaZYwIAACRky9j/jw0NIhbl97tJjUQigcjpbiVnGAwAm3x46g8GB/odd+2VnC+R
        SKCvp+dTVz8kZEvTjTdyKbAdBPD4qT+TUqK/rxeDPB2gHIlFY6ft/Cc8o7q+bDjnKgAApNMvYZyZ/+jQ
        IFKpJEpCoby4PEaFJy0logMDiEaj4/6NkPJZ1XVmw3E95YerfvaKAL48boOEQLCkGH5euyMLjcSGERkY
        mPAr6VLK3tuX35z/N0gcw1GnAAAgZPqhiX4vpUSkfwA9R49yboCmLD4ygmPd3ejv6z3z/SgEfq263mw5
        LgCali9/XAI7zvR3qWQS/X29ONrRgYH+PozEhpHOl+V8lNdGhkcw2N+P7s4u9B07ltEKPwnERDr9U9W1
        Z8tZcwAnCMgmQDyTyd9KKTEcjWH4xOVCw+2Gy2VACAGzAG8HRtlLJBJIpyWkTE96Oa9I49ZT16o4gePm
        AEb98K5VbwghLlJdB5EE2jHQX3/77bc7624gcOApwCgh01edujCIKNckEBMCVzmx8wMODoCmFSs6RTp9
        lQS4FJCUETJ9XdNNN21TXcdkOTYAAKBpxYpdAvLvVNdBmpL4z6blyx+f+obUcXQAAEDTzTc/C8ilUspe
        1bWQRtL4QdPym5pUlzFVjp0EPNXKO+88X7pcTwuIetW1UOGSUvYKyKuali9/VXUtVnD8CGBU04oVu0Q6
        fZGUeFp1LVSYJLBRCFxUKJ0fKKARwFgr77rrMilcKydaMkyUKQnsEJBNx083C0tBBsColatWLZFwXQ3I
        pQIorGeAke2kxNNCyGebbr75YdW12KWgA2CslatWLZFCLIHEbEhUC4FzVddE+eP4mhLRCogOIVPPykjk
        Gade28/G/wMHmzH2+FxB8AAAAABJRU5ErkJggg==
</value>
  </data>
</root>